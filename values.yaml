# Default values for dash-valo-management.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: yy556023/valo-management-api
  # This sets the pull policy for images.
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: dev

env:
  ASPNETCORE_ENVIRONMENT: valo-dev

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels:
  app: dash-valo-management-api
  env: dev
  component: backend

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80
  targetPort: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: dev-management-api.yuu-is87.com
      paths:
        - path: /
          pathType: Prefix
  # tls:
  # - secretName: dev-server-tls
  #   hosts:
  #     - dev-management-api.yuu-is87.com

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 4000m
    memory: 4Gi
  requests:
    cpu: 500m
    memory: 512Mi

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 60
  targetMemoryUtilizationPercentage: 80

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
- name: appsettings-volume
  mountPath: /app/appsettings.valo-dev.json
  subPath: appsettings.valo-dev.json
  readOnly: true

# Additional volumes on the output Deployment definition.
volumes:
  - name: appsettings-volume
    configMap:
      name: dash-valo-management-api-config
      items:
        - key: appsettings.valo-dev.json
          path: appsettings.valo-dev.json

externalServices:
  - name: postgresql
    host: host.minikube.internal
    port: 5432
  - name: seq
    host: host.minikube.internal
    port: 5341

appsettingsFiles:
  - appsettings.valo-dev.json
